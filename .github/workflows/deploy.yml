name: Deploy Terraform

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # (Opcional) Verifica formato dos .tf
      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

      # Valida sintaxe/refs do Terraform
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      # Gera o ZIP do Lambda dentro de terraform/
      - name: Zip Lambda code
        run: |
          cd lambda
          # Se tiver dependÃªncias extras (requirements.txt), instala antes:
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt -t .
          fi
          zip -r ../terraform/lambda.zip .

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var="aws_region=${{ secrets.AWS_REGION }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="aws_region=${{ secrets.AWS_REGION }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
